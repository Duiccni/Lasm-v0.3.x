org $borg
con n1 ($ + 5)
def .dword ?
def -0x10
def .byte "Hello, world!", ?
#set 0x34
'''
#jmp 10
This is an text message. :D
Hello, world!
'''
:here
nop
hlt
jmp .short &here
not eax
not si
neg *0x4321
not .dword *0x4321
dec ax
inc .byte *0x032
// Line 0x13(19)
times (^6 - 2 - $ + $$) def .x8 0x90
def $mbr
unknown
0x7400
'''
mov <reg>, <const>
mov <reg>, *<ptr>
mov <reg>, <reg>
mov *<ptr>, <reg>
mov .<size> <ptr>, <const>
mov *<ptr>, <const> *Auto Calculated Size*
'''
// mov <reg>, <const>
mov dx, 0x7432a
mov si, 0x7432
mov bh, 0x7432
mov eax, 0x7432
// mov <reg>, *<ptr>
mov eax, *0x4321
mov bx, *0x4321
mov si, *0x4321
mov ah, *0x4321
// mov <reg>, <reg>
mov eax, esi
mov bx, cx
mov ah, ah
mov dl, dl
// mov *<ptr>, <reg>
mov *0x4321, eax
// mov .<size> *<ptr>, <const>
mov .word *0x4321, ?
mov *0x4321, 0x7c
// Line 0x35
mov fs, *0x3210
mov *0x3210, gs
pop eax
pop ah
pop esi
pop cx
pop 0x43
pop 0x4321
pop .dword ?
push *0x75631
pop *0x75631
pop ds
pop es
pop ss
pop fs
---
:here
ret
int 0x10
call $
call .near &here
call .long &here